spring.application.name=8n903ims

spring.kafka.bootstrap-servers=moped-01.srvs.cloudkafka.com:9094,moped-02.srvs.cloudkafka.com:9094,moped-03.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${USERNAME}" password="${PASSWORD}";

#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer

#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde

spring.cloud.stream.kafka.streams.binder.configuration.output.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.output.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

#spring.cloud.stream.bindings.input.destination=8n903ims-in
#spring.cloud.stream.bindings.output.destination=8n903ims-out

spring.cloud.stream.bindings.input.destination=8n903ims-in-protobuf
spring.cloud.stream.bindings.output.destination=8n903ims-out-protobuf

#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.consumer.properties.spring.json.value.default.type=com.example.kafka.Dto
#spring.kafka.consumer.properties.spring.json.use.type.headers=false

spring.kafka.streams.properties.spring.json.value.default.type=com.example.kafka.Dto
#spring.kafka.streams.properties.spring.json.use.type.headers=false
